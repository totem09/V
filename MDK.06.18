# Полный Список Экзаменационных Билетов МДК.06.18 «Внедрение ИС»

Ниже представлен **полный список из 27 экзаменационных билетов** по дисциплине «Внедрение информационных систем». Каждый билет содержит три вопроса с **краткими** и **подробными** ответами. При наличии повторяющихся вопросов, ссылки ведут к первому месту появления вопроса.

---

## БИЛЕТ №1

### Вопрос 1. Формирование целей, задач и групп внедрения.

**Краткий ответ:**
- **Цели:** повышение эффективности, сокращение затрат, улучшение качества обслуживания, поддержка управления.
- **Задачи:** сбор требований, выбор (или разработка) системы, обучение сотрудников, интеграция в бизнес-процессы.
- **Группы:** руководство (стратегия), техническая группа (установка, настройка), бизнес-аналитики (требования), пользователи (тесты, обратная связь), эксперты по изменениям (адаптация процессов).

**Подробный ответ:**
Цели внедрения информационной системы обычно связаны с тем, чтобы ускорить работу организации, снизить операционные издержки и повысить качество взаимодействия с клиентами. Для этого определяются конкретные задачи: проанализировать текущие процессы, собрать и формализовать требования, выбрать или спроектировать подходящую ИС, обучить персонал и наладить интеграцию системы с существующей инфраструктурой. Проектное внедрение предполагает несколько рабочих групп. Руководство проекта отвечает за бюджет, сроки, стратегию, а техническая группа устанавливает и настраивает систему. Бизнес-аналитики занимаются требованиями и согласованием функциональности. Пользователи выступают финальными тестировщиками и дают обратную связь. Эксперты по изменениям помогают персоналу адаптироваться к новым бизнес-процессам и правилам работы.

### Вопрос 2. Технологии внедрения информационных систем.

**Краткий ответ:**
- **Big Bang:** одномоментное включение всей системы.
- **Phased:** поэтапное внедрение разных модулей.
- **Parallel:** старая и новая системы работают одновременно.
- **Pilot:** испытание на одном подразделении.
- **Аутсорсинг:** внедрение с привлечением сторонних специалистов.

**Подробный ответ:**
При **Big Bang** все функции и модули запускаются сразу; это экономит время на параллельную работу, но несёт риск, если система окажется неготовой. В **Phased**-подходе каждая часть системы (или модуль) вводится последовательно, что упрощает контроль и позволяет вносить корректировки после каждого шага, однако удлиняет общий срок. **Parallel** означает, что старая и новая системы работают вместе, снижая риск полного сбоя, но увеличивая затраты, поскольку требуется поддерживать две системы. **Pilot**-вариант предполагает внедрение в ограниченном масштабе (например, в одном отделе), протестировать функционал в реальных условиях, а затем расширять на всю организацию. **Аутсорсинг** подразумевает привлечение внешних экспертов, что может быть удобно при недостатке внутренних компетенций, но усложняет контроль над процессом.

### Вопрос 3. [Создайте схему информационных систем](#билет-1-вопрос-3-создайте-схему-информационных-систем)

**Краткий ответ:**
- **Информационная система в центре.**
- **Компоненты:** оборудование (Hardware), ПО (Software), данные (Data), процессы (Processes), люди (People).

**Подробный ответ:**
Информационная система — это совокупность нескольких компонентов. Оборудование (серверы, компьютеры, сети) обеспечивает «физическую» основу. Программное обеспечение — набор программных инструментов, ОС, прикладных решений, баз данных. Данные — всё, что обрабатывается и хранится: текст, цифры, медиа. Процессы представляют собой бизнес-операции и алгоритмы, по которым система функционирует. Ключевой элемент — люди, поскольку пользователи, администраторы, руководители принимают решения и работают с системой. Все эти блоки связаны обменом информации и взаимной поддержкой.

---

## БИЛЕТ №2

### Вопрос 1. Организация труда при разработке ИС.

**Краткий ответ:**
- **Планирование:** этапы, ресурсы.
- **Роли:** менеджер проекта, разработчики, аналитики, тестировщики.
- **Методологии:** Agile/Scrum, Waterfall.
- **Инструменты:** Jira, Trello, системы контроля версий.

**Подробный ответ:**
Чтобы эффективно организовать труд при разработке ИС, необходимо сначала сформировать план работ, определить сроки и ресурсы. Менеджер проекта отвечает за общее руководство, контроль бюджета и сроков. Разработчики создают код и проводят предварительные тесты. Аналитики уточняют требования у заказчика, описывают бизнес-логики. Тестировщики выявляют несоответствия системы требованиям и репортят ошибки. Существуют разные методологии: **Waterfall** подходит при стабильных требованиях, а гибкие (**Scrum**, **Kanban**) — при необходимости быстрого реагирования на изменения. В работе часто используют инструменты типа **Jira** или **Trello** для постановки задач, а **Git** или **SVN** для координации кода.

### Вопрос 2. Тестирование программ и систем.

**Краткий ответ:**
- **Виды:** функциональное, нефункциональное, модульное, интеграционное, системное, приёмочное, регрессионное.
- **Этапы:** планирование тестов, выполнение, анализ, фиксы, повторные тесты.

**Подробный ответ:**
Тестирование позволяет проверить, удовлетворяет ли система всем требованиям и ожиданиям пользователей. **Функциональное тестирование** смотрит, правильно ли реализованы бизнес-функции. **Нефункциональное** оценивает производительность, безопасность, удобство интерфейса. **Модульное тестирование** направлено на отдельные компоненты или функции. **Интеграционное** — как компоненты сочетаются друг с другом. **Системное** — проверяет всю систему целиком, а **приёмочное** определяет, готова ли система к эксплуатации. **Регрессионное тестирование** нужно, чтобы убедиться, что новые изменения не «ломают» старый функционал. Этапы начинаются с составления тест-планов и тест-кейсов, затем идёт фактическое тестирование, фиксация и исправление найденных проблем, а потом повторные проверки.

### Вопрос 3. [Нарисуйте схему связи Жизненного цикла АИС](#билет-2-вопрос-3-нарисуйте-схему-связи-жизненного-цикла-аис)

**Краткий ответ:**
- **Этапы:** инициация, проектирование, разработка, тестирование, внедрение, эксплуатация, вывод из эксплуатации.
- **Возможны возвраты к предыдущим этапам, итерации.**

**Подробный ответ:**
Классический цикл: сначала появляется идея (**инициация**), где формулируются цели и задачи. Затем в процессе **проектирования** создаётся архитектура и определяется функционал. На **разработке** всё программируется, на **тестировании** устраняются ошибки. **Внедрение** означает запуск системы в работу, далее идёт **эксплуатация**, где система функционирует по назначению. Когда система устаревает или заменяется, происходит **вывод из эксплуатации**. При итерационных моделях (например, **Agile**) может быть возврат к проектированию или разработке для уточнения и доработки функционала.

---

## БИЛЕТ №3

### Вопрос 1. [Формирование целей, задач и групп внедрения](#билет-1-вопрос-1-формирование-целей-задач-и-групп-внедрения)

**Краткий ответ:**
- **Цели:** повысить эффективность, снизить издержки, улучшить обслуживание, поддержать принятие решений.
- **Задачи:** определить требования, выбрать систему, обучить персонал, интегрировать ИС.
- **Группы:** руководство, техническая группа, бизнес-аналитики, пользователи, эксперты по изменениям.

**Подробный ответ:**
Цель внедрения ИС — автоматизировать и ускорять ключевые операции, обеспечивая доступность нужной информации в реальном времени. Задачи включают анализ и постановку требований к новому решению, выбор подходящей платформы или её разработку, выделение ресурсов на обучение сотрудников и последующую адаптацию. В проектной группе: руководство (контроль общих параметров), технические специалисты (установка, настройка, интеграция), аналитики (формализуют требования и логику), пользователи (участвуют в тестировании и приёмке системы) и эксперты по изменениям (обеспечивают «гладкое» внедрение, минимизируют сопротивление).

### Вопрос 2. Требования к внедрению ИС.

**Краткий ответ:**
- **Функциональные, технические, организационные, качественные, экономические, юридические.**

**Подробный ответ:**
Для успешного внедрения ИС следует учесть различные виды требований. **Функциональные** определяют, какие задачи должна решать система (учёт, отчётность, контроль и т.д.). **Технические** относятся к платформе, оборудованию, сетевой инфраструктуре. **Организационные** требования связаны с подготовкой персонала и регламентов. **Качественные** отражают надежность, производительность и удобство использования системы. **Экономические** — это соответствие проекту бюджету и расчёт окупаемости. **Юридические** (или нормативные) включают требования по защите данных и соответствие закону (например, о персональных данных).

### Вопрос 3. [В виде схемы представьте основные этапы ЖЦ](#билет-3-вопрос-3-в-виде-схемы-представьте-основные-этапы-жц)

**Краткий ответ:**
- **Анализ, проектирование, разработка, тестирование, внедрение, эксплуатация, вывод.**

**Подробный ответ:**
Жизненный цикл информационной системы стартует с анализа бизнес-требований и среды. Далее этап **проектирования**, где на основе требований формируется архитектура. На этапе **разработки** реализуется функционал, который затем проходит **тестирование** (модульное, интеграционное, системное). После успешных тестов система **внедряется** в реальную среду, начинается **эксплуатация**. На заключительном этапе систему либо масштабируют и совершенствуют, либо снимают с эксплуатации (если она устарела или заменяется новой).

---

## БИЛЕТ №4

### Вопрос 1. Оценка качества функционирования ИС.

**Краткий ответ:**
- **Критерии:** надежность, производительность, удобство, безопасность, масштабируемость.
- **Методы оценки:** мониторинг, тестирование, обратная связь, KPI.

**Подробный ответ:**
Качество системы обычно оценивают по таким критериям, как **надежность** (частота сбоев, восстановление), **производительность** (скорость отклика, пропускная способность), **удобство** (насколько интерфейс понятен пользователям), **безопасность** (защита данных от несанкционированного доступа) и **масштабируемость** (возможность работы под возросшими нагрузками). Методы включают мониторинг в реальном времени (сбор логов и метрик), нагрузочное тестирование, опрос пользователей и анализ KPI (ключевых показателей, например, среднее время ответа).

### Вопрос 2. Типы информационных систем.

**Краткий ответ:**
- **По уровню управления:** TPS, KMS, DSS, ESS.
- **По функционалу:** финансовые, ERP, HR, CRM и т.д.
- **По архитектуре:** одноуровневые, клиент-серверные, облачные.

**Подробный ответ:**
Системы могут классифицироваться исходя из уровня управления (**операционные TPS**, системы управления знаниями **KMS**, системы поддержки принятия решений **DSS**, исполнительные **ESS** для топ-менеджмента). По функциональному назначению выделяют **финансовые**, **бухгалтерские**, **ERP** (планирование ресурсов предприятия), **CRM** (управление отношениями с клиентами), **HR-системы** (кадровые вопросы) и прочие отраслевые решения. По архитектуре бывают традиционные **одноуровневые** решения, **клиент-серверные** системы, а также современные **облачные**, где большинство сервисов расположено в удалённой среде.

### Вопрос 3. [Что такое каскадная модель АИС? Нарисуйте схему модели](#билет-4-вопрос-3-что-такое-каскадная-модель-аис-нарисуйте-схему-модели)

**Краткий ответ:**
- **Каскадная (Waterfall) модель:** этапы идут последовательно, от анализа к поддержке.
- **Плюсы:** простота, чёткая структура.
- **Минусы:** тяжело вносить изменения.

**Подробный ответ:**
Каскадная модель (Waterfall) — это классический линейный подход к разработке и внедрению, где каждый этап (**анализ**, **проектирование**, **разработка**, **тестирование**, **внедрение**, **поддержка**) строго следует за предыдущим. Преимущества: простота планирования, понятность исполнения. Однако если на поздних шагах выявляются новые требования или обнаруживаются ошибки, возврат к предыдущим этапам крайне затратен по времени и ресурсам. Поэтому каскадная модель оптимальна, когда требования на старте хорошо определены и не меняются.

---

## БИЛЕТ №5

### Вопрос 1. Понятие “живой” документации.

**Краткий ответ:**
- **“Живая” документация:** постоянно обновляемые материалы, отражающие текущее состояние проекта.
- **Инструменты:** Confluence, Wiki, README в Git.

**Подробный ответ:**
Под «живой» документацией понимают документы, которые не «умирают» после первичной разработки, а непрерывно поддерживаются в актуальном состоянии. Обычно такая документация ведётся в системах типа **Atlassian Confluence** или в **wiki-репозиториях** (например, **GitHub Wiki**), интегрированных с системой контроля версий. Это помогает всем участникам проекта иметь доступ к последним требованиям, описанию архитектуры и любым изменениям, в том числе историческим версиям.

### Вопрос 2. ИС и её компоненты.

**Краткий ответ:**
- **Компоненты:** оборудование (Hardware), ПО (Software), данные (Data), процессы (Processes), люди (People), связь (Communication).

**Подробный ответ:**
Любая информационная система — это совокупность технической платформы (**серверы**, **ПК**, **сети**), программных решений (**ОС**, **приложения**, **базы данных**), данных (**все виды информации**, хранимой и обрабатываемой), процессов (**бизнес-процессы**, **алгоритмы обработки**), а также людей (**пользователи**, **администраторы**, **аналитики**). Данные компоненты связаны обменом информацией и логическими связями.

### Вопрос 3. [Что такое итерационная модель АИС? Нарисуйте схему модели](#билет-5-вопрос-3-что-такое-итерационная-модель-аис-нарисуйте-схему-модели)

**Краткий ответ:**
- **Итерационная модель:** разработка циклами, каждый заканчивается прототипом.
- **Позволяет:** реагировать на изменения и постоянно улучшать продукт.

**Подробный ответ:**
Итерационная модель предполагает, что за один цикл (**итерацию**) команда планирует функционал, разрабатывает часть системы, тестирует её и анализирует результаты. Система постепенно приобретает новые возможности. Каждая итерация завершается рабочим прототипом, доступным для демонстрации стейкхолдерам. Это удобно, когда требования меняются: после каждого цикла можно вносить коррективы, добавить или убрать функции, улучшить производительность.

---

## БИЛЕТ №6

### Вопрос 1. Какие методологии разработки программного обеспечения существуют?

**Краткий ответ:**
- **Каскадная (Waterfall), итерационная, Agile (Scrum, XP), спиральная, прототипирование, DevOps.**

**Подробный ответ:**
**Каскадная модель** — линейная последовательность этапов. **Итерационная** — цикличность в разработке с постепенным наращиванием функционала. **Agile**-фреймворки, такие как **Scrum**, ориентированы на короткие спринты и быструю реакцию на изменения требований. **Спиральная модель** дополняет итерации анализом рисков. **Прототипирование** используется для быстрой проверки идей. **DevOps** интегрирует разработку и эксплуатацию, ускоряя релизы и улучшая качество.

### Вопрос 2. Дайте определение ИС и перечислите её компоненты.

**Краткий ответ:**
- **ИС:** комплекс взаимосвязанных компонентов для сбора, хранения, обработки и передачи данных.
- **Компоненты:** оборудование, ПО, данные, процессы, люди, коммуникации.

**Подробный ответ:**
Информационная система — это структурированная совокупность технических и программных средств, людей и процедур для обеспечения нужд организации в данных и сервисах. Сюда входят **серверы**, **рабочие станции**, **сетевые устройства**, **операционные системы** и **прикладные программы**, а также сами данные (**таблицы**, **документы**, **мультимедиа**). **Процессы** описывают порядок и логику работы с данными, **люди** выполняют роли (**пользователи**, **администраторы**, **руководители**), а **связь** (**коммуникации**) обеспечивает взаимодействие между всеми элементами.

### Вопрос 3. [Что такое спиральная модель АИС? Нарисуйте схему модели](#билет-6-вопрос-3-что-такое-спиральная-модель-аис-нарисуйте-схему-модели)

**Краткий ответ:**
- **Спиральная модель:** сочетание итерационного подхода и анализа рисков на каждом витке.
- **Этапы:** планирование, анализ рисков, разработка и тестирование, оценка.

**Подробный ответ:**
**Спиральная модель** — это развитие итерационного подхода, где каждая итерация включает анализ рисков и проработку нескольких сценариев. Если риск велик, можно внести изменения на ранней стадии, чтобы уменьшить вероятность неудачи. На каждом витке добавляются или уточняются функции, система тестируется, и принимается решение о дальнейшем развитии или корректировке проекта. Подходит для больших проектов с высокой степенью неопределённости.

---

## БИЛЕТ №7

### Вопрос 1. Укажите основные преимущества, которые создаёт использование методологии.

**Краткий ответ:**
- **Управляемость процесса, гибкость, качество, снижение рисков, ускорение разработки, прозрачность.**

**Подробный ответ:**
Методология — это формализованный подход к разработке. Она помогает структурировать работу, определить роли и процессы, а также внедрить практики тестирования и контроля. **Управляемость** возрастает за счёт планирования и мониторинга, **гибкость** — благодаря регулярным ревизиям требований, **качество** — благодаря частым тестам и код-ревью. **Риски** снижаются, потому что методология предусматривает идентификацию и оценку потенциальных проблем. **Прозрачность** выражается в том, что участники проекта видят его прогресс и статус.

### Вопрос 2. Какие элементы включает в себя методология внедрения ИС?

**Краткий ответ:**
- **Анализ требований, планирование, проектирование, разработка и тестирование, обучение пользователей, внедрение и интеграция, поддержка и оценка.**

**Подробный ответ:**
Методология внедрения описывает, что делается на каждом этапе: сначала выясняют потребности компании, планируют бюджет и ресурсы. Затем проектируют решение и настраивают выбранную платформу. Обязательно проводят **тестирование** и устраняют ошибки. **Обучают** сотрудников работать с системой. Наконец, систему **внедряют** в боевую среду, сопровождают, поддерживают и потом анализируют итоги, вносят улучшения. Все эти шаги регламентированы, чтобы избежать хаоса.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки легкой и тяжелой модели](#билет-7-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-легкой-и-тяжелой-модели)

**Краткий ответ:**

| Модель          | Преимущества                               | Недостатки                               |
|-----------------|--------------------------------------------|------------------------------------------|
| **Лёгкая**      | Быстрое внедрение, минимум бюрократии      | Ограниченная масштабируемость, неполный учёт рисков |
| **Тяжёлая**     | Детальное планирование, контроль, высокая структурированность | Долгие сроки, возможная чрезмерная бюрократия |

**Подробный ответ:**
Лёгкие модели (например, **Lean**, часть методологий **Agile**) позволяют начать работать над решением быстро, без громоздкого документирования и иерархии, что хорошо для небольших или динамичных проектов. Это ускоряет реализацию, но может привести к пропуску важных рисков или сложностей, особенно если проект крупный. Тяжёлые модели предполагают подробные требования, обширное документирование, многоуровневое согласование. Они улучшают предсказуемость и контроль, но усложняют и удлиняют процесс.

---

## БИЛЕТ №8

### Вопрос 1. Какие преимущества в организации работы создаёт разделение проекта на фазы?

**Краткий ответ:**
- **Лучший контроль сроков и ресурсов, управляемость рисков, чёткая оценка прогресса.**

**Подробный ответ:**
Разделение на фазы (**инициация**, **планирование**, **разработка**, **тестирование** и т.д.) упорядочивает весь проект. Команде удобнее планировать задачи и ресурсы на каждую фазу, оценивать промежуточные результаты, вовремя вносить корректировки. **Риски** выявляются на ранних этапах, снижается вероятность «накопления» серьёзных проблем. Также создаётся ясная структура отчётности и взаимодействия внутри команды.

### Вопрос 2. Состав и характеристика типовых этапов проекта внедрения.

**Краткий ответ:**
- **Подготовка, анализ и проектирование, разработка и настройка, тестирование, обучение, внедрение, поддержка, оценка.**

**Подробный ответ:**
Обычно проект начинается с **подготовительной фазы** (формирование команды, первичное планирование). Далее идёт **анализ ситуации и проектирование** будущего решения (**техническая и бизнес-архитектура**). На **разработке** (или настройке, если это готовое решение) реализуются функции, затем всё **тестируется** (от модульного до интеграционного и приёмочного). После успешных тестов систему **внедряют**, включая **обучение пользователей**. В первые недели после запуска команда устраняет «подводные камни», а затем система передаётся в режим штатной поддержки.

### Вопрос 3. [Продемонстрируйте модель процессов MSF (Microsoft Solutions Framework)](#билет-8-вопрос-3-продемонстрируйте-модель-процессов-msf-microsoft-solutions-framework)

**Краткий ответ:**
- **Фазы MSF:** Envisioning, Planning, Developing, Stabilizing, Deploying + управление проектом.

**Подробный ответ:**
В **MSF** сначала формируется видение (**Envisioning**): общее понимание целей и требований. На этапе **Planning** детально описываются фазы, ресурсы, риски. Во время **Developing** создаются компоненты решения, пишется код, ведётся тестирование. Фаза **Stabilizing** нацелена на интенсивное тестирование, исправление ошибок и оптимизацию. **Deploying** — финальная установка, обучение пользователей и передача в эксплуатацию. **Управление проектом** происходит сквозным образом, включая контроль рисков, взаимодействие с командой и стейкхолдерами на каждой фазе.

---

## БИЛЕТ №9

### Вопрос 1. Состав и характеристика основных компонентов методологии управления проектами.

**Краткий ответ:**
- **Инициация, планирование, исполнение, контроль, завершение, управление рисками, управление командой.**

**Подробный ответ:**
Любая методология управления проектами (например, **PMBOK**) включает основные процессы: **инициация** (формулирование целей, назначение менеджера), **планирование** (составление план-графиков, бюджета, определение рисков, коммуникаций), **исполнение** (выполнение задач, координация), **контроль и мониторинг** (отслеживание прогресса, корректировка планов) и **завершение** (подведение итогов, документирование уроков). **Риски** сопровождают проект на всех этапах: их нужно выявлять, оценивать и управлять ими, минимизируя негативное влияние. **Управление командой** — это назначение ролей, мотивация, разрешение конфликтов.

### Вопрос 2. Описание модели жизненного цикла проекта.

**Краткий ответ:**
- **Этапы:** инициация, планирование, реализация, мониторинг и контроль, закрытие.

**Подробный ответ:**
Жизненный цикл проекта обычно делят на пять фаз. На **инициации** обосновывают целесообразность, определяют общий формат проекта. На **планировании** детализируют задачи, сроки, ресурсы и критерии успеха. Во время **реализации** выполняют саму работу по проекту. Параллельно идёт **мониторинг и контроль** — сопоставление фактического хода с планом и коррекция, если есть отклонения. Завершается всё фазой **закрытия**, когда проект формально считается выполненным, готовится итоговая документация и подводятся итоги.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки каскадной модели](#билет-9-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-каскадной-модели)

**Краткий ответ:**

| Модель          | Преимущества                               | Недостатки                               |
|-----------------|--------------------------------------------|------------------------------------------|
| **Каскадная**   | Простота, чёткость этапов, хорошо для стабильных требований | Дорого и сложно вносить изменения, позднее выявление ошибок |

**Подробный ответ:**
**Каскадная (Waterfall) модель** позволяет легко планировать ресурсы и сроки, ведь каждый этап начинается только после завершения предыдущего. Однако в случае изменения требований на поздних стадиях нужно переделывать уже выполненную работу. Ещё один недостаток — системное тестирование происходит ближе к концу, и это может затянуть сроки, если обнаружатся серьёзные ошибки. Поэтому каскадная модель подходит тогда, когда требования чётко определены заранее.

---

## БИЛЕТ №10

### Вопрос 1. Состав окружения проекта.

**Краткий ответ:**
- **Внешнее окружение:** стейкхолдеры, нормативно-правовое поле, рынок.
- **Внутреннее окружение:** ресурсы, оргкультура, структура команды.

**Подробный ответ:**
Окружение проекта включает факторы, влияющие на реализацию. Снаружи это заказчики, пользователи, поставщики, конкуренты, государственные регуляторы (**законы**, **стандарты**) и рыночная конъюнктура (**экономические кризисы**). Внутри: бюджет, команда специалистов, информационная инфраструктура организации, её культура, наличие процедур и инструкций. Понимание окружения позволяет учесть риски и грамотно спланировать проект.

### Вопрос 2. Состав и обязанности основных действующих лиц проекта внедрения ИС.

**Краткий ответ:**
- **Руководитель проекта, менеджер по внедрению, аналитик, разработчик, тестировщик, специалист по обучению, пользователь, консультант.**

**Подробный ответ:**
**Руководитель проекта** отвечает за общее управление, финансы, сроки. **Менеджер по внедрению** координирует взаимодействие с заказчиком, обеспечивает поддержку запуска. **Аналитик** собирает и формализует требования. **Разработчик** создаёт или адаптирует программный код. **Тестировщик** выявляет ошибки, **специалист по обучению** проводит тренинги для сотрудников компании. **Пользователи** в конечном итоге работают с системой, дают обратную связь. **Консультант** привносит экспертные знания в области, где требуется внешняя поддержка.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки спиральной модели](#билет-10-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-спиральной-модели)

**Краткий ответ:**

| Модель          | Преимущества                           | Недостатки                             |
|-----------------|----------------------------------------|----------------------------------------|
| **Спиральная**  | Гибкость, постоянная оценка рисков, итерации | Сложность управления, требует много документации и опыта |

**Подробный ответ:**
**Спиральная модель** предлагает на каждом витке анализировать риски, что позволяет вовремя вносить изменения. Хорошо подходит для крупных и сложных проектов с неопределёнными требованиями. При этом нужно уметь грамотно оценивать риски, вести документацию, согласовывать бюджет и сроки на каждом витке. Это усложняет процесс управления, делает его более затратным по времени и ресурсам, особенно если команда мало знакома с такими подходами.

---

## БИЛЕТ №11

### Вопрос 1. Группы процессов управления проектами.

**Краткий ответ:**
- **Инициация, планирование, исполнение, мониторинг и контроль, закрытие.**

**Подробный ответ:**
Согласно **PMBOK**, управление проектами разделяется на пять групп процессов. На **инициации** определяется цель, создаётся устав проекта. На **планировании** разрабатывается подробный план (**сроки**, **ресурсы**, **бюджет**, **риски**), **исполнение** — реализация заложенного в плане. **Мониторинг и контроль** — постоянная оценка прогресса, сравнение фактических результатов с планом и внесение правок. **Закрытие** подводит итоги, формирует итоговую документацию и завершает контрактные обязательства.

### Вопрос 2. Ориентировочный состав плана проекта.

**Краткий ответ:**
- **Описание проекта, сроки, ресурсы, бюджет, риски, коммуникации, критерии качества.**

**Подробный ответ:**
В плане проекта обычно содержатся разделы: **общая информация** (цель, задачи, ожидаемые результаты), **расписание** (**календарный план**, **вехи**), **ресурсы** (**кадровые**, **материальные**, **финансовые**), **детальный бюджет**, **анализ и план управления рисками** (**перечень рисков**, **стратегии**), **план коммуникаций** (**кто и когда получает информацию**), а также **критерии и методики контроля качества**. На базе этого плана команда понимает, что, как и когда делать, а стейкхолдеры могут контролировать ход работ.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки итерационной модели](#билет-11-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-итерационной-модели)

**Краткий ответ:**

| Модель          | Преимущества                                  | Недостатки                                     |
|-----------------|-----------------------------------------------|------------------------------------------------|
| **Итерационная**| Гибкость, частая обратная связь, рабочий продукт на каждом цикле | Сложность оценки сроков и стоимости, риск перегрузки команды |

**Подробный ответ:**
Итерационная модель позволяет выпускать работоспособные версии на каждом цикле, получать обратную связь от пользователей и корректировать функционал. Это удобно в проектах, где требования меняются или не до конца ясны на старте. Однако точные оценки сроков и бюджета усложняются, потому что каждый цикл может породить новые задачи и задачи на доработку. Кроме того, при большом числе итераций команда может испытывать «перегрузку» от постоянных изменений.

---

## БИЛЕТ №12

### Вопрос 1. Процессы управления содержанием.

**Краткий ответ:**
- **Планирование содержания (WBS), контроль изменений, верификация.**

**Подробный ответ:**
Управление содержанием проекта — это определение границ (**что входит, а что нет**), разбиение на задачи (**WBS**), контроль всех изменений требований. **Верификация** содержания подразумевает подтверждение, что все задачи выполнены в соответствии с изначальными критериями. Если требуется расширение или сокращение работ, надо официально оформить изменения, чтобы не возникало «ползучего расширения» объёмов.

### Вопрос 2. Процессы управления сроками исполнения проекта.

**Краткий ответ:**
- **Определение и последовательность задач, оценка длительности, создание графика, контроль сроков.**

**Подробный ответ:**
Сначала определяют полный перечень задач, затем выстраивают их в логическом порядке с учётом зависимостей. На этапе оценки длительности для каждой задачи предполагают, сколько нужно времени. Создаётся календарный план (**диаграмма Ганта**). **Контроль сроков** — это регулярное сравнение реального прогресса с запланированным, поиск отклонений, принятие мер (**перераспределение ресурсов**, **добавление людей**, **пересмотр сроков**).

### Вопрос 3. Распишите методы проектирования АИС.

**Краткий ответ:**
- **Структурное, объектно-ориентированное, инкрементное, прототипирование, модульное, CASE-инструменты.**

**Подробный ответ:**
**Структурное проектирование** основывается на иерархической декомпозиции функций и данных. **Объектно-ориентированное** — на выделении сущностей (**классов**), их свойств и методов, а также связей (**наследование**, **композиция**). **Инкрементное проектирование** добавляет функциональность постепенно, блок за блоком. **Прототипирование** позволяет быстро проверить гипотезы и уточнить требования. **Модульный подход** подразумевает, что система разбивается на независимые модули с чёткими интерфейсами. Использование **CASE-средств** (например, **Enterprise Architect**) помогает визуализировать систему (**UML-диаграммы**) и даже частично генерировать код.

---

## БИЛЕТ №13

### Вопрос 1. Процессы управления стоимостью проекта.

**Краткий ответ:**
- **Оценка стоимости, составление бюджета, контроль затрат.**

**Подробный ответ:**
Вначале **Rough Order of Magnitude** (примерная оценка) может дать приблизительную цифру. При составлении бюджета эти расчёты уточняются: распределяются средства по статьям расходов (**зарплата команды**, **лицензии**, **оборудование**). На этапе контроля сопоставляют фактические траты с плановыми. При перерасходе требуются корректирующие действия: **пересмотр функций**, **поиск дополнительных средств**, **оптимизация расходов**.

### Вопрос 2. Процессы управления качеством проекта.

**Краткий ответ:**
- **Планирование качества, обеспечение (управление) качества, контроль качества.**

**Подробный ответ:**
**Планирование качества** определяет стандарты и метрики, по которым будут оценивать продукт и процесс. **Обеспечение качества** (**управление качеством**) внедряет практики (**код-ревью**, **тестирование**, **аудит**), позволяющие соблюдать эти стандарты на каждом этапе. **Контроль качества** — это конкретные проверки, тесты, аудит, анализ дефектов и выработка рекомендаций по улучшению.

### Вопрос 3. [Создайте схему информационных систем](#билет-12-вопрос-3-создайте-схему-информационных-систем)

**Краткий ответ:**
- **В центре:** «Информационная система».
- **Компоненты:** оборудование, ПО, данные, процессы, люди вокруг как ключевые компоненты.

**Подробный ответ:**
ИС подразумевает комплекс, в котором **железо** обеспечивает вычислительные ресурсы, **ПО** (системное и прикладное) даёт инструментарий обработки, **данные** являются «сырьём» для принятия решений, **процессы** обеспечивают бизнес-логику и регламенты, а **люди** (**пользователи**, **администраторы**) выполняют организационную и управленческую роль. Все компоненты взаимодействуют между собой, обмениваясь информацией.

---

## БИЛЕТ №14

### Вопрос 1. Процессы управления ресурсами проекта.

**Краткий ответ:**
- **Планирование ресурсов (материальных, человеческих, финансовых), распределение, контроль использования.**

**Подробный ответ:**
Сначала определяют, какие нужны специалисты (**количество**, **квалификация**), какое оборудование или лицензии потребуются, какой бюджет под эти ресурсы закладывается. После этого планируют, кто и на каких этапах задействован (**расписание ресурсов**). На контроле следят, не возникает ли «узких мест», не выходят ли за рамки бюджета, хватает ли людей на каждую задачу. При необходимости делают перераспределение.

### Вопрос 2. Процессы управления персоналом проекта.

**Краткий ответ:**
- **Планирование команды, подбор и обучение, управление, мотивация.**

**Подробный ответ:**
Управление персоналом начинается с описания ролей, компетенций и структуры команды. Затем идёт подбор подходящих специалистов и их возможное обучение (**если нужны новые навыки**). В ходе проекта важно мотивировать людей, решать конфликты, обеспечивать комфортные условия работы. Менеджер проекта должен быть в курсе нагрузок на каждого сотрудника и их индивидуальных успехов.

### Вопрос 3. [Нарисуйте схему связи Жизненного цикла АИС](#билет-14-вопрос-3-нарисуйте-схему-связи-жизненного-цикла-аис)

**Краткий ответ:**
- **Жизненный цикл:** Инициация — Проектирование — Разработка — Тестирование — Внедрение — Эксплуатация — Вывод.
- **Возможны итерации и возвраты.**

**Подробный ответ:**
Связь этапов можно описать как последовательность действий от зарождения идеи до остановки использования системы. Однако, если в процессе выявляются изменения в требованиях, может понадобиться возврат, например, с внедрения обратно к корректировке проектирования или даже к анализу требований. С учётом итераций получается более гибкий подход, где каждый этап может «подключаться» повторно для доработок.

---

## БИЛЕТ №15

### Вопрос 1. Процессы управления коммуникациями проекта.

**Краткий ответ:**
- **Планирование коммуникаций (кто, что, когда получает), передача информации, мониторинг.**

**Подробный ответ:**
Коммуникации в проекте — один из ключевых факторов успеха. Необходимо определить, какие отчёты, встречи и презентации нужны, с какой периодичностью и для кого. Заранее описать каналы и форматы (**почта**, **мессенджеры**, **митинги**). На этапе передачи важно соблюдать сроки и уровень детализации. **Мониторинг коммуникаций** позволяет оценить, понимают ли участники проекта свои задачи, нет ли информационных пробелов.

### Вопрос 2. Жизненный цикл информационных систем. Процессы жизненного цикла.

**Краткий ответ:**
- **Анализ, проектирование, разработка, тестирование, внедрение, эксплуатация, вывод.**

**Подробный ответ:**
Любая ИС проходит эти стадии. На **анализе** (или обследовании) определяют требования, ограничения, бизнес-цели. **Проектирование** — выбор архитектуры и технологических решений. **Разработка** — реализация, настройка, кодирование. **Тестирование** — проверка работы. **Внедрение** — перевод в рабочий режим. **Эксплуатация** — период использования в реальной среде. **Вывод из эксплуатации** — когда система более не нужна или заменяется новой.

### Вопрос 3. [В виде схемы представьте основные этапы ЖЦ](#билет-15-вопрос-3-в-виде-схемы-представьте-основные-этапы-жц)

**Краткий ответ:**
- **Анализ → Проектирование → Разработка → Тестирование → Внедрение → Эксплуатация → Вывод.**

**Подробный ответ:**
Схема повторяет общий принцип: последовательно (или итеративно) система движется от идеи к исполнению, затем к реальному использованию. При необходимости на каждом этапе могут быть «петли обратной связи», если нужно вернуться и пересмотреть сделанные решения.

---

## БИЛЕТ №16

### Вопрос 1. Жизненный цикл информационных систем. Модели жизненного цикла.

**Краткий ответ:**
- **Каскадная, итерационная, спиральная, гибкие (Agile), V-модель.**

**Подробный ответ:**
Помимо классической **каскадной модели**, существуют **итерационная** (деление на циклы), **спиральная** (акцент на рисках), **Agile** (серия коротких итераций, тесное взаимодействие с заказчиком), **V-модель** (подчёркивается взаимосвязь этапов разработки и соответствующих этапов тестирования). Выбор модели зависит от стабильности требований, сроков, культуры управления в организации.

### Вопрос 2. Организация исполнения процессов на фазе выработки концепции.

**Краткий ответ:**
- **Определение целей, анализ ресурсов, разработка концепции, обоснование проекта, согласование требований, оценка рисков.**

**Подробный ответ:**
Фаза выработки концепции означает подготовку общего представления о том, какую проблему решает проект, какой результат ожидается. Проводят базовый анализ: смотрят, насколько реалистичны задачи, какие есть ограничения, какие доступны ресурсы (**финансы**, **люди**, **технологии**). Формулируют концептуальное решение, согласуют его со стейкхолдерами. Проводят оценку рисков (**технические**, **финансовые**, **организационные**). На этом этапе нередко готовят документ, называемый **ТЭО** (технико-экономическое обоснование).

### Вопрос 3. [Что такое каскадная модель АИС? Нарисуйте схему модели](#билет-16-вопрос-3-что-такое-каскадная-модель-аис-нарисуйте-схему-модели)

**Краткий ответ:**
- **Каскадная модель:** линейное прохождение этапов.
- **Преимущества:** чёткая структура, удобна при неизменных требованиях.
- **Недостатки:** дорого вносить изменения по ходу.

**Подробный ответ:**
В **каскадной модели** каждый этап — анализ требований, проектирование, разработка, тестирование, внедрение, поддержка — строго завершён, прежде чем начнётся следующий. Если вдруг выясняется, что нужно откорректировать **ТЗ** (техническое задание), то придётся вернуться назад, перепроектировать и переделать уже выполненные части кода. Это может вызвать задержки и перерасход бюджета.

---

## БИЛЕТ №17

### Вопрос 1. Организация исполнения процессов на фазе планирования.

**Краткий ответ:**
- **Создание детального плана (задачи, сроки, риски), определение ресурсов, состав команды.**

**Подробный ответ:**
На этой фазе формируют детальный план с учётом всех этапов, назначают роли, расписывают, кто что делает и в какой срок, оценивают риски и готовят план по их минимизации. Определяют потребные ресурсы: **люди** (**команда**), **финансы** (**бюджет**), **материальные средства** (**оборудование**, **лицензии**). Команда согласовывает эти детали, а заказчик утверждает план.

### Вопрос 2. Организация исполнения процессов на фазе разработки.

**Краткий ответ:**
- **Написание кода, конфигурирование системы, интеграция, документирование, первоначальное тестирование.**

**Подробный ответ:**
В ходе разработки создаются все необходимые компоненты ИС. Если используется готовая платформа, её настраивают и дорабатывают под потребности организации. **Программисты** пишут код, интегрируют модули, **бизнес-аналитики** уточняют детали, **QA-специалисты** проводят ранние тесты. Ведётся документация, где фиксируется, как устроена система, какие есть модули, какие интерфейсы.

### Вопрос 3. [Что такое итерационная модель АИС? Нарисуйте схему модели](#билет-17-вопрос-3-что-такое-итерационная-модель-аис-нарисуйте-схему-модели)

**Краткий ответ:**
- **Итерационная модель:** серия циклов, каждый заканчивается рабочим прототипом.
- **Преимущества:** гибкость к изменениям, быстрая обратная связь.

**Подробный ответ:**
В **итерационной модели** работа делится на короткие циклы. На каждом цикле планируют часть функционала, реализуют, тестируют, собирают отклик от пользователей и, если нужно, корректируют дальнейшие планы. Таким образом, готовый продукт формируется постепенно и может рано продемонстрировать ключевой функционал стейкхолдерам, а потом улучшаться от итерации к итерации.

---

## БИЛЕТ №18

### Вопрос 1. Организация исполнения процессов на фазе стабилизации.

**Краткий ответ:**
- **Исправление ошибок, оптимизация, финальные тесты, подготовка к внедрению.**

**Подробный ответ:**
На стадии стабилизации команда сосредоточена на поиске и устранении последних недочётов, повышении производительности. Проводятся дополнительные тесты — **нагрузочные**, **стресс-тесты**, **регрессионные**. Цель — добиться, чтобы система была максимально надёжна и оптимизирована к моменту релиза. Также уточняется документация и инструкция для пользователей.

### Вопрос 2. Организация исполнения процессов на фазе внедрения.

**Краткий ответ:**
- **Установка в рабочей среде, миграция данных, обучение пользователей, запуск в эксплуатацию.**

**Подробный ответ:**
Система переходит из стадии «разработка/тесты» в «продуктивную эксплуатацию». В это время производят физическую установку или развёртывание на серверах заказчика, переносят (**конвертируют**) данные из старых систем. Обязательно обучают персонал, проводят инструктаж, раздают мануалы. Далее проводят **«старт»** системы и начинают собирать обратную связь.

### Вопрос 3. [Что такое спиральная модель АИС? Нарисуйте схему модели](#билет-18-вопрос-3-что-такое-спиральная-модель-аис-нарисуйте-схему-модели)

**Краткий ответ:**
- **Спиральная модель:** итерационный подход с постоянным анализом рисков на каждом витке.

**Подробный ответ:**
**Спиральная модель** предполагает, что каждая итерация (**виток «спирали»**) включает этапы планирования, анализа рисков, разработки и тестирования, а затем оценку результатов. При обнаружении большого риска можно скорректировать план до серьёзных инвестиций в написание кода. Модель спирали полезна при крупных, длительных проектах, где важна гибкая корректировка требований.

---

## БИЛЕТ №19

### Вопрос 1. [Формирование целей, задач и групп внедрения](#билет-1-вопрос-1-формирование-целей-задач-и-групп-внедрения)

**Краткий ответ:**
- **Цели:** повысить эффективность, уменьшить расходы, улучшить сервис, поддержать принятие решений.
- **Задачи:** определить требования, подготовить/разработать ИС, обучить персонал, интегрировать в процессы.
- **Группы:** руководство, техническая группа, аналитики, пользователи, эксперты по изменениям.

**Подробный ответ:**
Цели внедрения ИС часто формулируются как увеличение скорости работы, уменьшение человеческих ошибок, повышение прозрачности и аналитики. Задачи: исследовать бизнес-потребности, выбрать или сделать софт, обучить персонал и внедрить изменения. **Руководители проекта** контролируют сроки и бюджет. **Техническая команда** занимается установкой и адаптацией ИС, **бизнес-аналитики** формируют точные требования и логику, **пользователи** дают обратную связь, а **эксперты по изменениям** помогают преодолеть организационные барьеры.

### Вопрос 2. Организация исполнения процессов на фазе внедрения.

**Краткий ответ:**
- **Установка, миграция данных, обучение, запуск, поддержка.**

**Подробный ответ:**
При внедрении нужно заранее спланировать дату **«Go-Live»**, подготовить среду (**серверы**, **сети**), перенести или синхронизировать данные из старых систем, обучить штат (**либо ключевых пользователей**, которые потом обучат остальных). Важно иметь план отката на случай критических сбоев, а также обеспечить оперативную поддержку (**Service Desk**), чтобы сотрудники знали, куда обращаться при проблемах.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки легкой и тяжелой модели](#билет-19-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-легкой-и-тяжелой-модели)

**Краткий ответ:**

| Модель          | Преимущества                               | Недостатки                               |
|-----------------|--------------------------------------------|------------------------------------------|
| **Лёгкая**      | Быстрое внедрение, минимум формальностей   | Ограниченная масштабируемость, риск пропустить нюансы |
| **Тяжёлая**     | Детальная проработка, контроль, формальная документация | Высокая бюрократия, долгие сроки         |

**Подробный ответ:**
**«Лёгкие» методологии** (**Lean**, некоторые **Agile-подходы**) позволяют стартовать без массивных технических заданий и регламентов, что хорошо для небольших или очень динамичных проектов. Но при росте проекта может появиться нехватка формализации, теряются детали. **«Тяжёлые» подходы** (**Waterfall** с подробной документацией) исключают неопределённость, но процесс запуска может слишком затянуться и обрасти сложной бюрократией.

---

## БИЛЕТ №20

### Вопрос 1. Процессы управления персоналом проекта.

**Краткий ответ:**
- **Планирование команды, подбор, обучение, координация, мотивация.**

**Подробный ответ:**
Управление персоналом включает определение необходимых компетенций, поиск и наём сотрудников с нужными навыками, обучение новых членов команды. В процессе реализации менеджер проекта мотивирует людей, распределяет задачи согласно их специализациям, следит за атмосферой в коллективе, проводит оценки эффективности. При необходимости решаются конфликты и перераспределяются обязанности.

### Вопрос 2. Технологии внедрения информационных систем.

**Краткий ответ:**
- **Big Bang, Phased, Parallel, Pilot, Outsourcing.**

**Подробный ответ:**
**Big Bang** подразумевает одномоментную замену старой системы на новую. **Phased** — пошаговое внедрение отдельных модулей или подразделений. **Parallel** — параллельное использование, позволяющее откатываться назад. **Pilot** — проверка системы в одном отделе. **Outsourcing** — привлечение сторонней фирмы для внедрения. Каждый способ имеет свою специфику: **Big Bang** требует идеальной подготовки, **Phased** даёт возможность исправлять ошибки по ходу, **Parallel** повышает расходы, а **Pilot** ограничивает внедрение в одном сегменте, снижая общие риски.

### Вопрос 3. [Опишите модель процессов MSF (Microsoft Solutions Framework)](#билет-20-вопрос-3-опишите-модель-процессов-msf-microsoft-solutions-framework)

**Краткий ответ:**
- **Фазы MSF:** Envisioning, Planning, Developing, Stabilizing, Deploying + управление проектом.

**Подробный ответ:**
На фазе **Envisioning** формируется общее понимание целей. **Planning** даёт детальный план, оценку рисков, бюджет и ресурсы. **Developing** — реализация и первоначальное тестирование. **Stabilizing** включает интенсивные тесты, фиксы, приведение системы в «полировку». **Deploying** — финальный запуск, обучающие мероприятия и передача в эксплуатацию. **Управление проектом** происходит на каждом шаге, контролируя сроки, ресурсы и риски.

---

## БИЛЕТ №21

### Вопрос 1. Процессы управления сроками исполнения проекта.

**Краткий ответ:**
- **Определение задач, зависимостей, оценка длительности, формирование графика, контроль сроков.**

**Подробный ответ:**
Сначала составляется список работ, потом устанавливают их приоритеты и зависимости. Рассчитывают, сколько времени займёт каждая задача, и формируют график (**диаграмма Ганта**). **Контроль сроков** предполагает регулярный мониторинг, чтобы при обнаружении отставания оперативно вносить корректировки: либо увеличить ресурсы, либо сократить объём требований.

### Вопрос 2. Описание модели жизненного цикла проекта.

**Краткий ответ:**
- **Этапы:** инициация, планирование, реализация, мониторинг и контроль, закрытие.

**Подробный ответ:**
Жизненный цикл проекта обычно делят на пять фаз. На **инициации** формулируют общее видение, подтверждают, что проект целесообразен. При **планировании** детализируют, какие задачи когда и кем выполняются, как распределяются ресурсы и как управляют рисками. **Исполнение** — выполнение плановых работ. **Мониторинг и контроль** идут параллельно, чтобы сверять реальное состояние с планом и корректировать, если есть отклонения. Завершается проект стадией **закрытия**, где все обязательства выполняются, материалы архивируются, уроки фиксируются.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки каскадной модели](#билет-21-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-каскадной-модели)

**Краткий ответ:**

| Модель          | Преимущества                               | Недостатки                               |
|-----------------|--------------------------------------------|------------------------------------------|
| **Каскадная**   | Ясная структура, легко контролировать процесс | Трудно внедрять изменения, позднее выявление ошибок |

**Подробный ответ:**
**Waterfall** модель позволяет легко планировать ресурсы и сроки, ведь каждый этап начинается только после завершения предыдущего. Есть формальные документы: **требования**, **проект**, **код**, **тестовый план**. Но если в конце тестирования выяснится, что нужно доработать функционал, придётся либо нарушать сроки и бюджет, возвращаясь в проектирование/разработку, либо идти на компромисс. Это делает модель не очень гибкой к изменениям на поздних стадиях.

---

## БИЛЕТ №22

### Вопрос 1. [Формирование целей, задач и групп внедрения](#билет-1-вопрос-1-формирование-целей-задач-и-групп-внедрения)

**Краткий ответ:**
- **Цели:** повышение эффективности, снижение затрат, улучшение клиентского сервиса, поддержка управленческих решений.
- **Задачи:** анализ требований, выбор/разработка системы, обучение персонала, интеграция ИС.
- **Группы:** руководство, техническая команда, аналитики, пользователи, эксперты по изменениям.

**Подробный ответ:**
Цели внедрения ИС обычно связаны с оптимизацией бизнес-процессов. Например, повысить производительность персонала, ускорить обработку данных, улучшить учёт и отчётность. Задачи сводятся к тому, чтобы уточнить, какие именно функции нужны, какую платформу или решение выбрать, как обучить людей и внедрить изменения. **Руководство проекта** курирует сроки и бюджет. **Технические специалисты** устанавливают и адаптируют систему. **Аналитики** собирают требования и проверяют их выполнимость. **Пользователи** тестируют на практике, выдают обратную связь. **Эксперты по изменениям** помогают перестроить внутренние процессы в организации.

### Вопрос 2. Технологии внедрения информационных систем.

**Краткий ответ:**
- **Big Bang, Phased, Parallel, Pilot, аутсорсинг.**

**Подробный ответ:**
**Big Bang** подразумевает одномоментную замену старой системы на новую. **Phased** — запуск отдельных модулей по очереди. **Parallel** — параллельное использование, позволяющее откатываться назад. **Pilot** — проверка в ограниченном масштабе. **Аутсорсинг** — привлечение внешних специалистов. Выбор подхода зависит от готовности организации к рискам, бюджета и культуры управления.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки спиральной модели](#билет-22-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-спиральной-модели)

**Краткий ответ:**

| Модель          | Преимущества                                  | Недостатки                                     |
|-----------------|-----------------------------------------------|------------------------------------------------|
| **Спиральная**  | Хороша при неопределённых требованиях, постоянный анализ рисков, итерации | Усложнённое управление, высокие затраты, обязательность квалифицированной команды |

**Подробный ответ:**
**Спиральная модель** даёт возможность идти итерациями, постоянно уточняя требования, анализируя возможные проблемы и формируя прототипы. Это снижает вероятность масштабного провала, так как на каждом витке риски переоцениваются. Но требует специалистов, умеющих проводить риск-анализ, и достаточных ресурсов для ведения документации и согласований. Не всегда оправдана для проектов с чёткими и стабильными требованиями.

---

## БИЛЕТ №23

### Вопрос 1. [Формирование целей, задач и групп внедрения](#билет-1-вопрос-1-формирование-целей-задач-и-групп-внедрения)

**Краткий ответ:**
- **Цели:** повышение эффективности, снижение затрат, улучшение клиентского сервиса, поддержка управленческих решений.
- **Задачи:** анализ требований, выбор/разработка системы, обучение персонала, интеграция ИС.
- **Группы:** руководство, техническая команда, аналитики, пользователи, эксперты по изменениям.

**Подробный ответ:**
Цели внедрения ИС обычно связаны с оптимизацией бизнес-процессов. Например, повысить производительность персонала, ускорить обработку данных, улучшить учёт и отчётность. Задачи сводятся к тому, чтобы уточнить, какие именно функции нужны, какую платформу или решение выбрать, как обучить людей и внедрить изменения. **Руководство проекта** курирует сроки и бюджет. **Технические специалисты** устанавливают и адаптируют систему. **Аналитики** собирают требования и проверяют их выполнимость. **Пользователи** тестируют на практике, выдают обратную связь. **Эксперты по изменениям** помогают перестроить внутренние процессы в организации.

### Вопрос 2. Ориентировочный состав плана проекта.

**Краткий ответ:**
- **Описание проекта, сроки, ресурсы, бюджет, риски, коммуникации, метрики качества.**

**Подробный ответ:**
В плане проекта должен быть чётко описан объём проекта (**что входит, что нет**), временные рамки и ключевые вехи. Указываются необходимые ресурсы (**сколько разработчиков**, **аналитиков**, **бюджет на лицензии**, **оборудование**). Отдельный раздел посвящён рискам (**техническим**, **финансовым**, **организационным**). **Коммуникационный план** регламентирует, как часто команда и стейкхолдеры будут обмениваться информацией (**статусы**, **отчёты**). **Метрики качества** определяют, по каким критериям оценивать итоговый продукт.

### Вопрос 3. [Представьте в виде таблицы преимущества и недостатки итерационной модели](#билет-23-вопрос-3-представьте-в-виде-таблицы-преимущества-и-недостатки-итерационной-модели)

**Краткий ответ:**

| Модель          | Преимущества                                  | Недостатки                                     |
|-----------------|-----------------------------------------------|------------------------------------------------|
| **Итерационная**| Гибкость, частая обратная связь, рабочий продукт на каждом цикле | Сложность оценки сроков и стоимости, риск перегрузки команды |

**Подробный ответ:**
**Итерационная модель** позволяет выпускать работоспособные версии на каждом цикле, получать обратную связь от пользователей и корректировать функционал. Это удобно в проектах, где требования меняются или не до конца ясны на старте. Однако точные оценки сроков и бюджета усложняются, потому что каждый цикл может породить новые задачи и задачи на доработку. Кроме того, при большом числе итераций команда может испытывать «перегрузку» от постоянных изменений.

---

## БИЛЕТ №24

### Вопрос 1. Какие элементы включает в себя методология внедрения ИС?

**Краткий ответ:**
- **Анализ и планирование, проектирование и адаптация, разработка и тестирование, обучение, интеграция, поддержка, улучшение.**

**Подробный ответ:**
Методология внедрения описывает шаги: сначала **сбор и формализация требований**, разработка или выбор решения, **тестирование** (**от отладочного до приёмочного**), планирование и проведение **обучения сотрудников**, фактический запуск (**интеграция с другими системами и процессами**). Завершающий этап — это сопровождение, поддержка пользователей, **сбор отзывов** и внедрение улучшений по мере необходимости.

### Вопрос 2. Технологии внедрения информационных систем.

**Краткий ответ:**
- **Big Bang, Phased, Parallel, Pilot, аутсорсинг.**

**Подробный ответ:**
**Big Bang** подразумевает одномоментную замену старой системы на новую. **Phased** — поэтапное внедрение отдельных модулей. **Parallel** — параллельное использование, позволяющее откатываться назад. **Pilot** — тестирование системы в одном отделе. **Аутсорсинг** — привлечение внешних специалистов. Выбор подхода зависит от готовности организации к рискам, бюджета и культуры управления.

### Вопрос 3. Распишите методы проектирования АИС.

**Краткий ответ:**
- **Структурное, объектно-ориентированное, инкрементное, прототипирование, модульное, CASE.**

**Подробный ответ:**
**Структурное проектирование** — декомпозиция системы на функции и структуры данных. **Объектно-ориентированное** — проектирование классов, их взаимодействий. **Инкрементное** — поэтапное наращивание функционала. **Прототипирование** — быстрая проверка идей. **Модульный подход** позволяет разрабатывать независимые блоки (**модули**), которые связываются через интерфейсы. **CASE-инструменты** (**например, UML-редакторы**) помогают визуализировать архитектуру, генерировать каркас кода, поддерживать документацию.

---

## БИЛЕТ №25

### Вопрос 1. Понятие “живой” документации.

**Краткий ответ:**
- **Живая документация:** постоянно обновляемая, в онлайн-инструментах (Confluence, Wiki).

**Подробный ответ:**
Смысл «живой» документации в том, чтобы отражать текущее состояние проекта, а не «замороженную» версию на момент написания. Обновления в коде, новой функциональности, изменении бизнес-логики автоматически или вручную фиксируются в документах, и все участники видят актуальные сведения. Это повышает прозрачность и снижает риск, что люди будут пользоваться устаревшими инструкциями.

### Вопрос 2. Процессы управления сроками исполнения проекта.

**Краткий ответ:**
- **Определение задач, зависимостей, оценка длительности, формирование графика, контроль сроков.**

**Подробный ответ:**
Сначала составляется список работ, потом устанавливают их приоритеты и зависимости. Рассчитывают, сколько времени займёт каждая задача, и формируют график (**диаграмма Ганта**). **Контроль сроков** предполагает регулярный мониторинг, чтобы при обнаружении отставания оперативно вносить корректировки: либо увеличить ресурсы, либо сократить объём требований.

### Вопрос 3. [Создайте схему информационных систем](#билет-25-вопрос-3-создайте-схему-информационных-систем)

**Краткий ответ:**
- **В центре:** «Информационная система».
- **Компоненты:** оборудование, ПО, данные, процессы, люди вокруг как ключевые компоненты.

**Подробный ответ:**
ИС подразумевает комплекс, в котором **железо** обеспечивает вычислительные ресурсы, **ПО** (системное и прикладное) даёт инструментарий обработки, **данные** являются «сырьём» для принятия решений, **процессы** обеспечивают бизнес-логику и регламенты, а **люди** (**пользователи**, **администраторы**) выполняют организационную и управленческую роль. Все компоненты взаимодействуют между собой, обмениваясь информацией.

---

## БИЛЕТ №26

### Вопрос 1. Состав и характеристика типовых этапов проекта внедрения.

**Краткий ответ:**
- **Подготовительный, анализ/проектирование, разработка/настройка, тестирование, обучение, внедрение, поддержка.**

**Подробный ответ:**
На **подготовительном этапе** формируют группу и план. **Анализ и проектирование** определяют структуру будущей системы. **Разработка** (при необходимости) или **настройка** готового решения идёт параллельно с **тестированием**. После успешных тестов обучают пользователей. **Внедряют систему** в рабочую среду, где в первые дни идёт активная поддержка и исправление мелких сбоев. В ходе **эксплуатации** система работает под присмотром службы поддержки.

### Вопрос 2. Процессы управления коммуникациями проекта.

**Краткий ответ:**
- **Планирование коммуникаций (кто, что, когда получает), передача информации, мониторинг.**

**Подробный ответ:**
Коммуникации в проекте — один из ключевых факторов успеха. Необходимо определить, какие отчёты, встречи и презентации нужны, с какой периодичностью и для кого. Заранее описать каналы и форматы (**почта**, **мессенджеры**, **митинги**). На этапе передачи важно соблюдать сроки и уровень детализации. **Мониторинг коммуникаций** позволяет оценить, понимают ли участники проекта свои задачи, нет ли информационных пробелов.

### Вопрос 3. [Нарисуйте схему связи Жизненного цикла АИС](#билет-26-вопрос-3-нарисуйте-схему-связи-жизненного-цикла-аис)

**Краткий ответ:**
- **Жизненный цикл:** Анализ → Проектирование → Разработка → Тестирование → Внедрение → Эксплуатация → Вывод.

**Подробный ответ:**
Схема повторяет общий принцип: последовательно (или итеративно) система движется от идеи к исполнению, затем к реальному использованию. При необходимости на каждом этапе могут быть **«петли обратной связи»**, если нужно вернуться и пересмотреть сделанные решения.

---

## БИЛЕТ №27

### Вопрос 1. Состав и обязанности основных действующих лиц проекта внедрения ИС.

**Краткий ответ:**
- **Руководитель проекта, менеджер по внедрению, аналитик, разработчик, тестировщик, специалист по обучению, пользователь, консультант.**

**Подробный ответ:**
**Руководитель проекта** отвечает за общее управление, финансы, сроки. **Менеджер по внедрению** координирует взаимодействие с заказчиком, обеспечивает поддержку запуска. **Аналитик** собирает и формализует требования. **Разработчик** создаёт или адаптирует программный код. **Тестировщик** выявляет ошибки, **специалист по обучению** проводит тренинги для сотрудников компании. **Пользователи** в конечном итоге работают с системой, дают обратную связь. **Консультант** привносит экспертные знания в области, где требуется внешняя поддержка.

### Вопрос 2. Процессы управления содержанием.

**Краткий ответ:**
- **Планирование содержания (WBS), контроль изменений, верификация.**

**Подробный ответ:**
Управление содержанием проекта — это определение границ (**что входит, а что нет**), разбиение на задачи (**WBS**), контроль всех изменений требований. **Верификация** содержания подразумевает подтверждение, что все задачи выполнены в соответствии с изначальными критериями. Если требуется расширение или сокращение работ, надо официально оформить изменения, чтобы не возникало **«ползучего расширения»** объёмов.

### Вопрос 3. [В виде схемы представьте основные этапы ЖЦ](#билет-27-вопрос-3-в-виде-схемы-представьте-основные-этапы-жц)

**Краткий ответ:**
- **Анализ → Проектирование → Разработка → Тестирование → Внедрение → Эксплуатация → Вывод.**

**Подробный ответ:**
Схема повторяет общий принцип: последовательно (или итеративно) система движется от идеи к исполнению, затем к реальному использованию. При необходимости на каждом этапе могут быть **«петли обратной связи»**, если нужно вернуться и пересмотреть сделанные решения.

---
